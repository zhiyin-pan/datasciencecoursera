cvd_smoke$smoke_frequency=="Every day"
cvd_smoke$smoke_frequency=="Every day"
library(sqldf)
cvd_smoke %>%
filter(had_heart_attack == "Yes")
group_by(smoke_frequency) %>%
summarise(count = n())
cvd_smoke %>%
filter(had_heart_attack == "Yes")
group_by(smoke_frequency)
cvd_smoke %>%
group_by(smoke_frequency)
summarise(count=n())
cvd_smoke %>%
group_by(smoke_frequency)
summarise(count=n())
cvd_smoke %>%
summarise(count=n())
cvd_smoke %>%
filter (smoke_frequency == "Some days")
cvd_smoke %>%
filter (smoke_frequency == "Some days")
cvd_smoke %>%
filter (smoke_frequency == "Some days") %>%
group by (smoke_frequency)
cvd_smoke %>%
filter (smoke_frequency == "Some days") %>%
group_by (smoke_frequency)
cvd_smoke %>%
filter (smoke_frequency == "Some days") %>%
group_by (smoke_frequency)
cvd_smoke %>%
filter (smoke_frequency == "Some days") %>%
group_by (smoke_frequency) %>%
summarise(count=n())
cvd_smoke %>% str()
cvd_smoke %>%
filter (smoke_frequency == "Some days") %>%
group_by(had_heart_attack)  %>%
summarise(count=n())
cvd_smoke %>%
filter (smoke_frequency == "Some days") %>%
group_by(had_heart_attack)
cvd_smoke %>%
filter (smoke_frequency == "Some days") %>%
group_by(had_heart_attack) %>%
str()
selected_nzes2011 %>%
select(jpartyvote, jdiffvoting, X_singlefav) %>%
str()
load("~/Desktop/study/coursera/data analysis/selected_nzes2011.RData")
View(selected_nzes2011)
View(selected_nzes2011)
selected_nzes2011 %>%
select(jpartyvote, jdiffvoting, _singlefav)
selected_nzes2011 %>%
select(jpartyvote, jdiffvoting, X_singlefav) %>%
str()
newdata <- selected_nzes2011 %>%
select(jpartyvote, jdiffvoting, X_singlefav) %>%
str()
newdata <- selected_nzes2011 %>%
select(jpartyvote, jdiffvoting, X_singlefav)
View(newdata)
newdata %>%
group_by(jpartyvote) %>%
summarise(count = n())
selected_nzes2011 %>%
group_by(jpartyvote) %>%
summarise(count = n())
View(brfss2013)
https://www.coursera.org/learn/inferential-statistics-intro/supplement/3EKw7/week-1-lab-instructions
install.packages("dplyr")
install.packages("ggplot2")
install.packages("shiny")
install_github("StatsWithR/statsr")
install.packages("devtools")
library(devtools)
library(devtools)
install_github("StatsWithR/statsr")
library(ggplot2)
mpg
View(mpg)
str(mpg)
range(mpg)
range(mpg$year)
ggplot(mpg, aes(x=displ, y=hwy)) + geom_point()
ggplot(mpg, aes(displ, hwy)) + geom_point()
ggplot(mpg, aes(model, manufacturer)) + geom_point()
ggplot(mpg, aes(manufacturer)) + geom_point()
ggplot(mpg, aes(manufacturer)) + geom_bar()
ggplot(mpg, aes(cty)) + geom_histogram()
ggplot(mpg, aes(cty)) + geom_histogram(binwidth = 10)
ggplot(mpg, aes(cty)) + geom_histogram(binwidth = 5)
ggplot(mpg, aes(cty)) + geom_histogram(binwidth = 2)
ggplot(mpg, aes(cty)) + geom_histogram(binwidth = 15)
ggplot(mpg, aes(cty)) + geom_histogram(binwidth = 30)
ggplot(mpg, aes(cty)) + geom_histogram(binwidth = 1)
ggplot(mpg, aes(displ, hwy, color=class)) + geom_point()
ggplot(mpg, aes(displ, hwy, shape=drv)) + geom_point()
ggplot(mpg, aes(displ, hwy, size=cyl)) + geom_point()
ggplot(mpg, aes(displ, hwy, color=class)) + geom_point()
ggplot(mpg, aes(displ, hwy, size=cyl, color=class)) + geom_point()
ggplot(mpg, aes(displ, hwy, shape=cyl, color=class)) + geom_point()
ggplot(mpg, aes(displ, hwy, shape=drv, color=class)) + geom_point()
ggplot(mpg, aes(displ, hwy, color=class)) + geom_point(color="blue")
ggplot(mpg, aes(displ, hwy)) + geom_point(color="blue")
ggplot(mpg, aes(displ, hwy)) + geom_point(aes(color="blue"))
ggplot(mpg, aes(displ, hwy)) + geom_point()
ggplot(mpg, aes(displ, hwy)) + geom_point() + facet_wrap(~class)
ggplot(mpg, aes(displ, hwy)) + geom_point() + facet_wrap(~cyl)
ggplot(mpg, aes(displ, hwy)) + geom_point() + facet_wrap(~hwy)
ggplot(mpg, aes(displ, hwy)) + geom_point() + facet_wrap(~cyl)
help("facet_wrap")
ggplot(mpg, aes(displ, hwy)) + geom_point() + facet_wrap(~cyl, scales="free")
ggplot(mpg, aes(displ, hwy)) + geom_point() + facet_wrap(~cyl, scales="free-x")
ggplot(mpg, aes(displ, hwy)) + geom_point() + facet_wrap(~cyl, scales="free_x")
ggplot(mpg, aes(displ, hwy)) + geom_point() + geom_smooth()
?loess
ggplot(mpg, aes(displ, hwy)) + geom_point() + geom_smooth(span=0.5)
ggplot(mpg, aes(displ, hwy)) + geom_point() + geom_smooth(span=0.1)
ggplot(mpg, aes(displ, hwy)) + geom_point() + geom_smooth(span=0.2)
ggplot(mpg, aes(displ, hwy)) + geom_point() + geom_smooth(span=0.3)
ggplot(mpg, aes(displ, hwy)) + geom_point() + geom_smooth(span=0.4)
ggplot(mpg, aes(displ, hwy)) + geom_point() + geom_smooth(span=1)
?gam
load("mgcv")
install.packages("mgcv")
load(mgcv)
library(mgcv)
ggplot(mpg, aes(disp))
ggplot(mpg, aes(displ, hwy)) + geom_point() + geom_smooth(method="gam", formula = y ~ s(x))
ggplot(mpg, aes(displ, hwy)) + geom_point() + geom_smooth(method="lm")
install.packages("mass")
install.packages("MASS")
library(MASS)
ggplot(mpg, aes(displ, hwy)) + geom_point() + geom_smooth(method="rlm")
ggplot(mpg, aes(drv, hwy)) + geom_point()
ggplot(mpg, aes(drv, hwy)) + geom_jitter()
ggplot(mpg, aes(drv, hwy)) + geom_box()
ggplot(mpg, aes(drv, hwy)) + geom_boxplot()
ggplot(mpg, aes(drv, hwy)) + geom_violin()
ggplot(mpg, aes(drv, hwy, color="class")) + geom_violin()
ggplot(mpg, aes(drv, hwy)) + geom_violin(color="blue")
?geom_violin
ggplot(mpg, aes(drv, hwy)) + geom_violin(fill="grey80", color="#3366FF")
?geom_violin
ggplot(mpg, aes(drv, hwy)) + geom_violin(aes(fill="grey80")
;
ggplot(mpg, aes(drv, hwy)) + geom_violin(aes(fill=cyl))
?geom_violin
ggplot(mpg, aes(drv, hwy)) + geom_violin(aes(fill=factor(cyl))
;
ggplot(mpg, aes(drv, hwy)) + geom_violin(aes(fill=factor(cyl)))
?geom_violin
ggplot(mpg, aes(drv, hwy)) + geom_violin(aes(fill=factor(vs)))
?geom_violin
ggplot(mpg, aes(drv, hwy)) + geom_violin(aes(fill=factor(class)))
ggplot(mpg, aes(drv, hwy)) + geom_violin(fill="grey80", color="#3366FF")
ggplot(mpg, aes(drv, hwy)) + geom_violin(aes(fill=factor(class)))
ggplot(mpg, aes(hwy)) + geom_histogram()
ggplot(mpg, aes(hwy)) + geom_freqpoly()
ggplot(mpg, aes(hwy)) + geom_freqpoly(binwidth=2.5)
ggplot(mpg, aes(displ, color=drv)) + geom_freqpoly(binwidth=0.5)
ggplot(mpg, aes(displ, fill=drv)) + geom_histogram(binwidth=0.5)
ggplot(mpg, aes(displ, fill=drv)) + geom_histogram(binwidth=2)
ggplot(mpg, aes(displ, fill=drv)) + geom_histogram(binwidth=0.5)
ggplot(mpg, aes(displ, fill=drv)) + geom_histogram(binwidth=0.5) + facet_wrap(~drv, ncol=1)
drugs <- data.frame(drug= c("a", "b", c), effect = c(4.2, 9.7, 6.1))
drugs <- data.frame(drug= c("a", "b", "c"), effect = c(4.2, 9.7, 6.1))
ggplot(drugs, aes(drug, effect)) + geom_bar()
ggplot(drugs, aes(drug, effect)) + geom_bar(stat = "identity")
ggplot(drugs, aes(drug, effect)) + geom_histogram()
ggplot(drugs, aes(drug, effect)) + geom_point()
economics
View(economics)
ggplot(economics, aes(date, unemploy / pop)) + geom_line()
ggplot(economics, aes(date, unemploy )) + geom_line()
ggplot(economics, aes(unemploy /pop, unempmed)) + geom_line()
ggplot(economics, aes(unemploy /pop, uempmed)) + geom_line()
ggplot(economics, aes(unemploy /pop, uempmed)) + geom_path + geom_line()
ggplot(economics, aes(unemploy /pop, uempmed)) + geom_path() + geom_line()
ggplot(economics, aes(unemploy /pop, uempmed)) + geom_path() + geom_point()
year <- function(x) as.POSIXct(x)$year + 1900
year
ggplot (economics, aes(unemploy / pop, uempmed)) + geom_path(colours = "grey50") + geom_point(aes(color=year(date)))
ggplot (economics, aes(unemploy / pop, uempmed)) + geom_path(colour = "grey50") + geom_point(aes(color=year(date)))
ggplot (economics, aes(unemploy / pop, uempmed)) + geom_path(colour = "grey50")
ggplot (economics, aes(unemploy / pop, uempmed)) + geom_path(colour = "grey50") + geom_point(aes(color=year(date)))
year(economics$date)
year <- function(x) as.POSIXlt(x)$year + 1900
year
ggplot (economics, aes(unemploy / pop, uempmed)) + geom_path(colour = "grey50") + geom_point(aes(color=year(date)))
ggplot(mpg, aes(cty, hwy)) + geom_point()
ggplot(mpg, aes(cty, hwy)) + geom_line()
ggplot(mpg, aes(cty, hwy)) + geom_path()
ggplot(mpg, aes(class, hwy)) + geom_boxplot()
ggplot(mpg, aes(class, hwy), hwy) + geom_boxplot()
ggplot(mpg, aes(class, hwy)) + geom_boxplot()
ggplot(mpg, aes(reorder(class, hwy), hwy)) + geom_boxplot()
ggplot(mpg, aes(cty, hwy)) + geom_point()
ggplot(mpg, aes(cty, hwy)) + geom_point(alpha = 1/3)
ggplot(mpg, aes(cty, hwy)) + geom_point(alpha = 1/3) + xlab("city driving (mpg") + ylab ("high way driving (MPG)")
ggplot(mpg, aes(cty, hwy)) + geom_point(alpha = 1/3) + xlab("city driving (mpg") + ylab (NULL)
ggplot(mpg, aes(drv, hwy)) + geom_point()
ggplot(mpg, aes(drv, hwy)) + geom_jitter()
ggplot(mpg, aes(drv, hwy)) + geom_jitter(width = 0.25)
ggplot(mpg, aes(drv, hwy)) + geom_jitter(width = 0.25) + xlim("f", "r") + ylim(20, 30)
ggplot(mpg, aes(drv, hwy)) + geom_jitter(width = 0.25, na.rm=TRUE) + ylim(NA, 30)
ggplot(mpg, aes(drv, hwy)) + geom_jitter(width = 0.25, na.rm=TRUE) + ylim(20, 30)
ggplot(mpg, aes(displ, hwy, color= factor(cyl))) + geom_point()
p <- ggplot(mpg, aes(displ, hwy, color= factor(cyl))) + geom_point()
summary(p)
ggsave("plot.png", width=5, height=5)
library(statsr)
library(dplyr)
library(ggplot2)
data(nc)
str(nc)
summary(nc$gained)
ggplot(nc, aes(weight, habit)) + geom_point()
ggplot(nc, aes(weight, habit)) + geom_box()
ggplot(nc, aes(weight, habit)) + geom_bar()
ggplot(nc, aes(weight, habit)) + geom_histogram()
ggplot(nc, aes(weight, habit)) + geom_boxplot()
ggplot(nc, aes(weight, habit)) + geom_boxplot()
ggplot(nc, aes(habit, weight)) + geom_boxplot()
ggplot(nc, aes(habit, weight)) + geom_jitter()
ggplot(nc, aes(habit, weight)) + geom_violin()
nc %>%
group_by(habit) %>%
summarise(mean_weight = mean(weights))
nc %>%
group_by(habit) %>%
summarise(mean_weight = mean(weight))
nc %>%
group_by(habit) %>%
summarise(mean_weight = mean(weight))
nc %>%
group_by(habit) %>%
nc %>%
group_by(habit) %>%
summarise(mean_weight = mean(weight))
nc %>%
group_by(habit) %>%
summarise(mean_weight = mean(weight))
inference(y=weight, x=habit, data=nc, statistic = "mean", type="ht", null=0, alternative = "twosided", method="theoritical")
inference(y=weight, x=habit, data=nc, statistic = "mean", type="ht", null=0, alternative = "twosided", method="theoretical")
inference(y=weight, x=habit, data=nc, statistic = "mean", type="ci", alternative = "twosided", method="theoretical")
inference(y=weight, x=habit, data=nc, statistic = "mean", type="ci", null=0, alternative = "twosided", method="theoretical")
inference(y = weight, x = habit, data = nc, statistic = "mean", type = "ci",
method = "theoretical", order = c("smoker","nonsmoker"))
View(nc)
inference(y = weeks, data = nc, statistic = "mean", type = "ci",
method = "theoretical")
# type your code for Question 6 here, and Knit
inference(y = weeks, data = nc, statistic = "mean", type = "ci", method = "theoretical", conf_level=
0.99)
# type your code for the Exercise here, and Knit
inference(y = weeks, data = nc, statistic = "mean", type = "ci", method = "theoretical", conf_level=
0.9)
# type your code for the Exercise here, and Knit
inference(y = weight, x=mature, data = nc, statistic = "mean", type = "ht", null=0, method = "theoretical", conf_level= 0.95)
# type your code for the Exercise here, and Knit
inference(y = weight, x=mature, data = nc, statistic = "mean", type = "ht", null=0, method = "theoretical", conf_level= 0.95, alternative = "twosided")
nc %>%
filter(mature='younger mom')
filter(mature='younger mom') %>%
summarie (maxAgeYoung = max(mage))
nc %>%
filter(mature='younger mom') %>%
summarie (maxAgeYoung = max(mage))
# type your code for Question 7 here, and Knit
nc %>%
summarise(count = max(mage)) %>%
filter(mature == "younger mom")
library(statsr)
library(dplyr)
library(ggplot2)
data(nc)
# type your code for Question 7 here, and Knit
nc %>%
summarise(count = max(mage)) %>%
filter(mature == "younger mom")
nc %>%
filter(mature == "younger mom") %>%
summarise(count = max(mage))
nc %>%
filter(mature == "younger mom") %>%
summarise(maxAge = max(mage))
nc %>%
filter(mature == "mature mom") %>%
summarise(minAge = min(mage))
library(ggplot2)
library(dplyr)
install.packages("kernSmooth")
install.packages("KernSmooth")
library(KernSmooth)
getwd()
rm(list=ls())
search()
dir()
setwd("/Users/zhiyin/workspace/coursera/programmingR/airPolution")
getwd()
dir()
dir ("data")
read.csv("data/001.csv")
sample <- read.csv("data/001.csv")
View(sample)
baseDir <- "/Users/zhiyin/workspace/coursera/programmingR/airPolution/"
dataDir <- "data"
fullFileDir <- paste(baseDir, dataDir, "001", ".csv", sep = "/", collapse = NULL)
fullFileDir
tmp <- read.csv(fullFileDir)
View(sample)
baseDir <- "/Users/zhiyin/workspace/coursera/programmingR/airPolution"
dataDir <- "data"
df <- data.frame(Date=as.Date(character()),
sulfate=double(),
nitrate=double(),
DevideID=integer())
fullFileDir <- paste(baseDir, dataDir, "001", ".csv", sep = "/", collapse = NULL)
read.csv(fullFileDir)
?paste
baseDir <- "/Users/zhiyin/workspace/coursera/programmingR/airPolution"
dataDir <- "data"
df <- data.frame(Date=as.Date(character()),
sulfate=double(),
nitrate=double(),
DevideID=integer())
fullFileDir <- paste(baseDir, dataDir, "001", sep = "/")
fullFileDir <- paste(fullFileDir, ".csv", sep="")
fullFileDir
tmp <-   read.csv(fullFileDir)
getData <- function(files) {
baseDir <- "/Users/zhiyin/workspace/coursera/programmingR/airPolution"
dataDir <- "data"
df <- data.frame(Date=as.Date(character()),
sulfate=double(),
nitrate=double(),
DevideID=integer())
for (i in files) {
myfulldata = merge(df, mydata2)
fullFileDir <- paste(baseDir, dataDir, "001", sep = "/")
fullFileDir <- paste(fullFileDir, ".csv", sep="")
df <- merge(df, read.csv(fullFileDir))
}
df
}
getData(1:2)
getData(001)
getData <- function(files) {
baseDir <- "/Users/zhiyin/workspace/coursera/programmingR/airPolution"
dataDir <- "data"
df <- data.frame(Date=as.Date(character()),
sulfate=double(),
nitrate=double(),
DevideID=integer())
for (i in files) {
fullFileDir <- paste(baseDir, dataDir, i, sep = "/")
fullFileDir <- paste(fullFileDir, ".csv", sep="")
df <- merge(df, read.csv(fullFileDir))
}
df
}
getData(001)
str_pad(1, 3, pad = "0")
library(stringr)
str_pad(1, 3, pad = "0")
getData <- function(files) {
baseDir <- "/Users/zhiyin/workspace/coursera/programmingR/airPolution"
dataDir <- "data"
df <- data.frame(Date=as.Date(character()),
sulfate=double(),
nitrate=double(),
DevideID=integer())
for (i in files) {
fullFileDir <- paste(baseDir, dataDir, str_pad(i, 3, pad = "0"), sep = "/")
fullFileDir <- paste(fullFileDir, ".csv", sep="")
df <- merge(df, read.csv(fullFileDir))
}
df
}
getData(1)
getData <- function(files) {
baseDir <- "/Users/zhiyin/workspace/coursera/programmingR/airPolution"
dataDir <- "data"
df <- data.frame(Date=as.Date(character()),
sulfate=double(),
nitrate=double(),
DevideID=integer())
for (i in files) {
fullFileDir <- paste(baseDir, dataDir, str_pad(i, 3, pad = "0"), sep = "/")
fullFileDir <- paste(fullFileDir, ".csv", sep="")
df1 <- read.csv(fullFileDir)
}
df1
}
getData(1)
merge(df, df1)
df1 <- getData(1)
merge(df, df1)
df <- merge(df1)
df <- merge(df1, df1)
View(df)
View(df1)
df1 <- getData(2)
df2 <- getData(2)
df1 <- getData(1)
df <- merge (df1, df2)
View(df)
df <- rbind(df1, df2)
rm (list=ls())
getData <- function(files) {
baseDir <- "/Users/zhiyin/workspace/coursera/programmingR/airPolution"
dataDir <- "data"
df <- data.frame(Date=as.Date(character()),
sulfate=double(),
nitrate=double(),
DevideID=integer())
for (i in files) {
fullFileDir <- paste(baseDir, dataDir, str_pad(i, 3, pad = "0"), sep = "/")
fullFileDir <- paste(fullFileDir, ".csv", sep="")
df1 <- read.csv(fullFileDir)
df <- merge(df, df1)
}
df
}
getData(1:2)
tmp <- getData(1:2)
x <- list (a=1:5, b=rnorm(10))
x
lapply(x, mean)
df <- matrix(ncol=4, nrow=0)
View(df)
getData <- function(files) {
baseDir <- "/Users/zhiyin/workspace/coursera/programmingR/airPolution"
dataDir <- "data"
df <- matrix(ncol=4, nrow=0)
for (i in files) {
fullFileDir <- paste(baseDir, dataDir, str_pad(i, 3, pad = "0"), sep = "/")
fullFileDir <- paste(fullFileDir, ".csv", sep="")
df1 <- read.csv(fullFileDir)
df <- rbind(df, df1)
}
df
}
getData(1)
tmp <- getData(1)
tmp <- getData(2)
tmp <- getData(1:2)
tmp <- getData(3:5)
getData <- function(files) {
baseDir <- "/Users/zhiyin/workspace/coursera/programmingR/airPolution"
dataDir <- "data"
matrices <- matrix(ncol=4, nrow=0)
for (i in files) {
fullFileDir <- paste(baseDir, dataDir, str_pad(i, 3, pad = "0"), sep = "/")
fullFileDir <- paste(fullFileDir, ".csv", sep="")
matrices <- rbind(matrices, read.csv(fullFileDir))
}
matrices
}
tmp <- getData(3:5)
tmp <- getData(3:6)
tmp <- getData(3:9)
tmp <- getData(1)
tmp <- getData(2)
tmp <- getData(1:2)
View(tmp)
?merge
?rnorm
x <- c(rnorm(10), runif(10), rnorm(10, 1))
x
f <- gl(3, 10)
f
?gl
?f
split(x, f)
sapply(split(x, f), mean)
lapply(split(x, f), mean)
library(datasets)
search()
ls()
head(airquality)
s <- split(airquality, airquality$Month)
s
s
sapply(s, function(x){})
sapply(s, function(x){ colMeans(x[, c("Ozone")], na.rm = TRUE)})
sapply(s, function(x){ colMeans(x[, c("Ozone", "Wind")], na.rm = TRUE)})
sapply(s, function(x){ colMeans(x[, c("Ozone", "Wind", "Solar.R")], na.rm = TRUE)})
sapply(s, function(x){ colMeans(x[, c("Ozone", "Wind", "Solar.R", "Temp")], na.rm = TRUE)})
f1 <- gl(2, 5)
f2 <- gl(5, 2)
f1
f2
integrate(f1, f2)
interaction(f1, f2)
split(x, interaction(f1, f2))
split(x, list(f1, f2))
split(x, list(f1, f2), drop=TRUE)
x <- c(rnorm(10), runif(10), rnorm(10, 1))
f <- gl(3, 10)
x
f
tapply(x, f, mean)
tapply(x, f, range)
x <- matrix(rnorm(200), 20, 10)
x
apply(x, 2, mean)
apply(x, 1, mean)
